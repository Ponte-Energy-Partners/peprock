[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.commitizen]
version_provider = "poetry"
update_changelog_on_bump = true
bump_message = "chore: bump version to $new_version"
changelog_incremental = true


[tool.coverage.report]
exclude_also = [
    "@abc\\.abstractmethod$",
    "^if typing\\.TYPE_CHECKING:$",
]

[tool.coverage.run]
source = [
    "peprock",
]


[tool.mypy]
files = "peprock"
explicit_package_bases = true

python_version = "3.10"
platform = "linux"

warn_redundant_casts = true
warn_unused_ignores = true
warn_unused_configs = true
warn_unreachable = true


[tool.poetry]
name = "peprock"
version = "1.7.1"
description = "Foundational Python library"
license = "MIT"
authors = [
    "Jakob Keller <57402305+jakob-keller@users.noreply.github.com>",
]
readme = "README.md"
repository = "https://github.com/Ponte-Energy-Partners/peprock"
documentation = "https://api.peprock.ponte.energy"
keywords = [
    "peprock",
    "datetime",
    "models",
    "patterns",
    "subclasses",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = "^3.10"
typing-extensions = { version = "^4.0.1", python = "<3.11" }

[tool.poetry.group.dev.dependencies]
coverage = { version = "^7.2.1", extras = ["toml"] }
mypy = "^1.1.1"
pre-commit = "^4.0.1"
pdoc3 = "^0.11.1"
pytest = "^8.0.0"
pytest-cov = "^5.0.0"
ruff = "^0.6.0"

[tool.poetry.urls]
"Ponte Energy Partners" = "https://ponte.energy"


[tool.pytest.ini_options]
addopts = "--doctest-modules --import-mode=importlib"
filterwarnings = [
    "error",
]
minversion = "7.2"
xfail_strict = true


[tool.ruff]
required-version = ">=0.6.0"
target-version = "py310"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D203", # one-blank-line-before-class
    "D213", # multi-line-summary-second-line
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "ANN", # flake8-annotations
    "D", # pydocstyle
    "PLR0912", # too-many-branches
    "PLR0913", # too-many-arguments
    "PLR0915", # too-many-statements
    "S101", # assert
    "SLF001", # private-member-access
    "T201", # print-found
]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true
